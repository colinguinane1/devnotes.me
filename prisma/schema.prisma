datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["public"]
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

model Author {
  id              String    @id @unique
  first_name      String?
  last_name       String?
  image_url       String?
  last_sign_in_at DateTime?
  created_at      DateTime  @default(now())
  updated_at      DateTime? @updatedAt
  username        String?   @unique
  email           String    @unique
  Posts           Post[]    @relation("author")
  likedPosts      Post[]    @relation("likedBy")

  // Relationships
  subscribers   Subscription[] @relation("Subscriptions")
  subscriptions Subscription[] @relation("Subscribers")

  @@schema("public")
}

model Subscription {
  id             String @id @default(cuid())
  subscriberId   String
  subscribedToId String
  subscriber     Author @relation("Subscribers", fields: [subscriberId], references: [id])
  subscribedTo   Author @relation("Subscriptions", fields: [subscribedToId], references: [id])

  @@unique([subscriberId, subscribedToId]) // Ensure unique subscription pairs
  @@schema("public")
}

model Post {
  id          String   @id @default(cuid())
  mdx         Boolean? @default(false)
  description String?
  slug        String   @unique
  title       String
  content     String
  views       Int      @default(0)
  likes       Int      @default(0)
  author      Author   @relation("author", fields: [user_id], references: [id])
  published   Boolean? @default(false)
  updatedAt   DateTime @default(now())
  createdAt   DateTime @default(now())
  user_id     String
  likedBy     Author[] @relation("likedBy")

  @@schema("public")
}
